SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='ene;feb;mar;abr;may;jun;jul;ago;sep;oct;nov;dic';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

// Rutas de acceso a QVD
SET vQVD='lib://Google_Drive/1v1bo7qRrDw67yN8P-bLyMH6tnJK3mRig';

// Rutas de acceso a QVD de cada periodo disponible
SET vQVDPeriodos= 'lib://Google_Drive _QVD_PERIODOS/1OWGSjr3cwB3g2NYa-0PtOdQ5_89QdVyW';


// Código para correr únicamente los fines de semana

LET vDayOfWeek = WeekDay(Today());

IF vDayOfWeek = 5 or vDayOfWeek = 6 THEN


// Mapeo caracteres especiales del campo Address, tabla Customers

CharacterMapping:
MAPPING LOAD * INLINE [
    Original, Replacement    
    ä, a
    à, a
    æ, a
    ç, c
    ê, e
];


// Mapeo tabla Shippers, por faltante de descripción en algunos ID

ShippersMapping:
MAPPING LOAD * INLINE [
   ID, Description  
    4, FedEx
    5, Moller Inc
];



// Tabla Orders:

TempOrders:
LOAD
    OrderID                 														 	 AS ID_Order,
 	CustomerID 																		 	 AS ID_Customer,
    ShipperID   																	 	 AS ID_Shipper,
    EmployeeID              														 	 AS ID_Employee,
    Freight,																																					
    ContadorIDProductos 																 AS CountProduct,																		
    Date(Date#(Left("Month", 3) &'/'& "Year",'MMM/YYYY'),'YYYYMM') 		 			     AS Period,
    Date(Date#(Left("Month", 3) &'/'& "Year",'MMM/YYYY'),'MM-YYYY') 		 			 AS PeriodDate,
    Date(Date#("Day" &'/'& Left("Month", 3) &'/'& "Year", 'DD/MMM/YYYY'), 'DD/MM/YYYY')  AS Date
FROM [$(vQVD)/DATA_ORDERS.qvd] (qvd);


INNER JOIN (TempOrders)

// Tabla OrderDetails:
LOAD
    OrderID  																			AS ID_Order,
    ProductID 																			AS ID_Product,
  	Discount,																			
    LineNo,																				
    Quantity,																			
    UnitPrice,																			
    LineSalesAmount																		
FROM [$(vQVD)/DATA_ORDERS_DETAILS.qvd] (qvd);


// Tabla Products:

Left Join (TempOrders)

LOAD
    ProductID										AS ID_Product,
    Products										AS ID_Category, //     Renombrado porque es igual a PK de tabla Categorías
    SupplierID										AS ID_Supplier,			    
    ProductName,										
    QuantityPerUnit,									
    UnitCost,										
    UnitsInStock, 									
    UnitsOnOrder									
FROM [$(vQVD)/PRODUCTS.qvd] (qvd);

LEFT JOIN (TempOrders)

// Tabla Categories:

LOAD
    CategoryID										AS ID_Category,
    CategoryName,									
    Description										
FROM [$(vQVD)/DATA_CATEGORIES.qvd] (qvd);


// Tabla Customers:

LEFT JOIN (TempOrders)

LOAD
    CustomerID													AS ID_Customer,
    DivisionID													AS ID_Division,     
    MapSubstring('CharacterMapping', Address) 					AS Address, //     Reemplazo de caracteres especiales por gramática española
    City,														
    CompanyName,		                                			
    ContactName,													
    Country,														
    Fax,
    Phone,														
    PostalCode,	
    If (Isnull(StateProvince),'N/A', StateProvince) 		    AS StateProvince  //     Reemplazo de estados nulos por un valor
   
FROM [$(vQVD)/DATA_CUSTOMERS.qvd] (qvd);


// Tabla Divisions:

LEFT JOIN (TempOrders)

LOAD
    DivisionID													AS ID_Division,
    DivisionName												
FROM [$(vQVD)/DATA_DIVISIONS.qvd] (qvd);


// Tabla Shippers:

LEFT JOIN (TempOrders)

LOAD
	ShipperID											AS ID_Shipper,
 	Shippers 
FROM [$(vQVD)/DATA_SHIPPERS.qvd] (qvd);


// Tabla con la totalidad de periodos existentes

ListOfPeriods:
LOAD DISTINCT
    Period
RESIDENT TempOrders
ORDER BY Period desc
;

STORE ListOfPeriods INTO [$(vQVDPeriodos)/ListadoPeriodos.qvd] (qvd);


// División en QVD por períodos existentes 
// While recorre las n filas de la tabla ListOfPeriods, cargada previamente

SET vCounter=0;  

			DO WHILE vCounter < NoOfRows('ListOfPeriods') 

// Variable con la la fecha del período que toma el While en cada bucle
	LET vDatePeriod=Peek('Period', vCounter, 'ListOfPeriods');  

// Variable que concatena el nombre de la tabla + periodo que debe tomar para su almacenamiento
	LET vTable='Detalle_Ordenes_' &''& vDatePeriod;
       
NoConcatenate

// Carga y almacenamiento de la tabla, por cada período (campos + métricas)
$(vTable):
    LOAD
       ID_Order,
       ID_Customer,
       ID_Shipper,
       ID_Employee,
       Freight,
       CountProduct,
       Period,
       PeriodDate,
       Date,
       ID_Product,
       Discount,																			
       LineNo,																				
       Quantity,																			
       UnitPrice,																			
       LineSalesAmount,
       ID_Category,
       ID_Supplier,
       ProductName,										
       QuantityPerUnit,									
       UnitCost,										
       UnitsInStock, 									
       UnitsOnOrder,
       CategoryName,									
       Description,	
       ID_Division,
       Address,
       City,														
       CompanyName,		                                			
       ContactName,													
       Country,														
       Fax,
       Phone,														
       PostalCode,	
       StateProvince,
       DivisionName,
       UnitCost * Quantity                                                                     	 AS CostOfGoodSold,
       LineSalesAmount - (UnitCost * Quantity)                                                   AS GrossMargin,
       IF (not IsNull(Shippers), Shippers, Applymap('ShippersMapping',ID_Shipper, 'N/A')) 	     AS Shipper     //     Mapeo de tabla Shippers
    RESIDENT TempOrders
    WHERE Period=DATE#($(vDatePeriod), 'YYYYMM');
    
    
	STORE $(vTable) INTO [$(vQVDPeriodos)/$(vTable).qvd] (qvd);
    
    DROP TABLE $(vTable);
 
 		TRACE 'Table: $(vTable)';
        TRACE 'Period: $(vDatePeriod)';
 
    LET vCounter=vCounter + 1;

			LOOP;

DROP TABLE ListOfPeriods;
DROP TABLE TempOrders;

	END IF;




// Carga de la tabla ListadoPeriodos y selección del máximo periodo existente
MaxPeriodo:
LOAD
    MAX(Period) 				AS MaxPeriod
FROM [$(vQVDPeriodos)/ListadoPeriodos.qvd] (qvd); 

 		LET vMaxPeriodo=Peek('MaxPeriod', 0, 'MaxPeriodo');
 		TRACE 'Max period is: $(vMaxPeriodo)'; 

DROP TABLE MaxPeriodo; 

// Carga QVD de los últimos 12 períodos disponibles  

SET vLoop=12;

FOR i=0 TO $(vLoop) - 1 
       LET vPeriod = Date(AddMonths(Num('$(vMaxPeriodo)'), -i), 'YYYYMM');  // Resta i meses al máximo periodo
       TRACE 'Loading period: $(vPeriod)';  

// Carga de la tabla Órdenes, con todos sus campos, de los últimos 12 períodos disponibles  
    ORDERS:
LOAD
    *
FROM [$(vQVDPeriodos)/Detalle_Ordenes_$(vPeriod).qvd] (qvd);

NEXT i;



// -----------------Master Calendar-----------------

TempCalendar:
LOAD
Min(Date) AS MinDate,
Max(Date) AS MaxDate
Resident     ORDERS
;

LET vMinDate = Num(Peek('MinDate', 0, 'TempCalendar'));
LET vMaxDate = Num(Peek('MaxDate', -1, 'TempCalendar'));

DROP TABLE TempCalendar;

Calendar:
LOAD
$(vMinDate) + IterNo()-1 					AS Num, 
DATE($(vMinDate) + IterNo()-1) 			    AS TempDate
AUTOGENERATE 1
WHILE ($(vMinDate) + IterNo()-1) <= $(vMaxDate)
;

MasterCalendar:
LOAD 
TempDate 									AS Date, 
week(TempDate) 								AS Week, 
year(TempDate) 								AS Year, 
month(TempDate) 							AS Month, 
month(TempDate)&' '&year(TempDate) 			AS MonthYear,
Num(month(TempDate)) 						AS MonthNum,
Num(MonthStart(TempDate)) 					AS PeriodNum,
day(TempDate) 								AS Day, 
weekday(TempDate) 							AS WeekDay,
'Q' & ceil(month(TempDate) /3) 				AS Quarter,
ceil(month(TempDate) /3) 				    AS QuarterNum,
QuarterName(TempDate) 						AS QuarterName,
'MTH'										AS _CalendarType

RESIDENT Calendar 
ORDER BY TempDate ASC
;

DROP TABLE Calendar;

